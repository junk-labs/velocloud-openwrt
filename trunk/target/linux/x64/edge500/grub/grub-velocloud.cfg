# Velocloud grub config;

# XXX hardware watchdog
# XXX pch serial

@SERIAL_CONFIG@
@TERMINAL_CONFIG@

set default="0"
set timeout="@TIMEOUT@"

# only root1 and root2 stamps are in the env block;

set root1_stamp=0
set root2_stamp=0
load_env -f (@BOOT_PART@)/boot/grub/grubenv
set stamps="root1=$root1_stamp root2=$root2_stamp"

# set default;
# set after load_env so they do not get clobbered;

set root=(@ROOT0_PART@)
set root_dev=@ROOT0_DEV@
set root_stamp=1
set vc_img=0

set root0_part=@ROOT0_PART@
set root1_part=@ROOT1_PART@
set root2_part=@ROOT2_PART@
set root0_dev=@ROOT0_DEV@
set root1_dev=@ROOT1_DEV@
set root2_dev=@ROOT2_DEV@

# find latest image;

if [ "$root1_stamp" -gt "$root_stamp" ]; then
	set root_stamp=$root1_stamp
	set root=$root1_part
	set root_dev=$root1_dev
	set vc_img=1
fi
if [ "$root2_stamp" -gt "$root_stamp" ]; then
	set root_stamp=$root2_stamp
	set root=$root2_part
	set root_dev=$root2_dev
	set vc_img=2
fi

set force_model="@FORCE_MODEL@"

# clear the stamp of the root we are boting;
#
#if [ "$root_stamp" = "$root1_stamp" ]; then
#	set root1_stamp=0
#fi
#if [ "$root_stamp" = "$root2_stamp" ]; then
#	set root2_stamp=0
#fi

# final latest boot entry;
# save stamps back to env block, when we actually boot that root;

set boot_cmd="linux /vmlinuz root=$root_dev @CMDLINE@ noinitrd vcimg=$vc_img $force_model crashkernel=2G-:128M"
menuentry "Latest Velocloud Image" {
#save_env -f (@BOOT_PART@)/boot/grub/grubenv root1_stamp root2_stamp
echo "stamps: $stamps"
$boot_cmd
}

# entries to force booting a specific root;
# do not change stamps for forced boots;

menuentry "Force Velocloud Factory Image" {
set root=(@ROOT0_PART@)
linux /vmlinuz root=@ROOT0_DEV@ @CMDLINE@ $force_model noinitrd
}
menuentry "Force Velocloud Root1" {
set root=(@ROOT1_PART@)
linux /vmlinuz root=@ROOT1_DEV@ @CMDLINE@ $force_model noinitrd
}
menuentry "Force Velocloud Root2" {
set root=(@ROOT2_PART@)
linux /vmlinuz root=@ROOT2_DEV@ @CMDLINE@ $force_model noinitrd
}

