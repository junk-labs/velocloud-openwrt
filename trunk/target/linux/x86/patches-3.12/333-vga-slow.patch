--- a/arch/x86/kernel/early_printk.c
+++ b/arch/x86/kernel/early_printk.c
@@ -1,3 +1,4 @@
+#include <linux/delay.h>
 #include <linux/console.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
@@ -23,6 +24,7 @@
 
 static int max_ypos = 25, max_xpos = 80;
 static int current_ypos = 25, current_xpos;
+static int vga_slow = 0;
 
 static void early_vga_write(struct console *con, const char *str, unsigned n)
 {
@@ -41,6 +43,15 @@
 			for (i = 0; i < max_xpos; i++)
 				writew(0x720, VGABASE + 2*(max_xpos*j + i));
 			current_ypos = max_ypos-1;
+
+			// slow vga scrolling for readability;
+
+			if(vga_slow) {
+				for(i = 0; i < vga_slow * 1000; i++) {
+					volatile unsigned short v;
+					v = readw(VGABASE);
+				}
+			}
 		}
 #ifdef CONFIG_KGDB_KDB
 		if (c == '\b') {
@@ -65,6 +76,23 @@
 	}
 }
 
+static __init void early_vga_init(char *s)
+{
+	unsigned char c;
+	unsigned slow;
+	char *e;
+
+	if (*s == ',')
+		++s;
+
+	if (*s) {
+		slow = simple_strtoul(s, &e, 10);
+		if (slow > 10000 || s == e)
+			slow = 0;
+		vga_slow = slow;
+	}
+}
+
 static struct console early_vga_console = {
 	.name =		"earlyvga",
 	.write =	early_vga_write,
@@ -230,6 +258,7 @@
 			max_xpos = boot_params.screen_info.orig_video_cols;
 			max_ypos = boot_params.screen_info.orig_video_lines;
 			current_ypos = boot_params.screen_info.orig_y;
+			early_vga_init(buf + 3);
 			early_console_register(&early_vga_console, keep);
 		}
 #ifdef CONFIG_EARLY_PRINTK_DBGP
