diff -Naur a/drivers/net/bonding/rte_eth_bond_pmd.c b/drivers/net/bonding/rte_eth_bond_pmd.c
--- a/drivers/net/bonding/rte_eth_bond_pmd.c	2016-07-28 11:48:41.000000000 -0700
+++ b/drivers/net/bonding/rte_eth_bond_pmd.c	2016-10-26 14:11:37.773782167 -0700
@@ -45,6 +45,7 @@
 #include <rte_dev.h>
 #include <rte_alarm.h>
 #include <rte_cycles.h>
+#include <rte_pci_dev_ids.h>
 
 #include "rte_eth_bond.h"
 #include "rte_eth_bond_private.h"
@@ -1739,7 +1740,7 @@
 
 	/* Default value for polling slave found is true as we don't want to
 	 * disable the polling thread if we cannot get the lock */
-	int i, polling_slave_found = 1;
+	int i, rv, polling_slave_found = 1;
 
 	if (cb_arg == NULL)
 		return;
@@ -1765,9 +1766,21 @@
 			polling_slave_found = 1;
 
 			/* Update slave link status */
-			(*slave_ethdev->dev_ops->link_update)(slave_ethdev,
+			rv = (*slave_ethdev->dev_ops->link_update)(slave_ethdev,
 					internals->slaves[i].link_status_wait_to_complete);
 
+			/* XXX VeloCloud interrupt -- needed to check if the VF mailbox is no
+			 * longer communicating correctly with the host PF.  If it communication
+			 * is compromised, send an interrupt indicating the type for action,
+			 * for what should be a dev_stop()/dev_start() action by the host process.
+			 */
+			if (rv && ((slave_ethdev->pci_dev->id.vendor_id == 
+				PCI_VENDOR_ID_INTEL) &&
+				(slave_ethdev->pci_dev->id.device_id == IXGBE_DEV_ID_82599_VF))) {
+
+				_rte_eth_dev_callback_process(slave_ethdev, RTE_ETH_EVENT_VF_MBX_SYNC);
+			}
+
 			/* if link status has changed since last checked then call lsc
 			 * event callback */
 			if (slave_ethdev->data->dev_link.link_status !=
diff -Naur a/drivers/net/ixgbe/base/ixgbe_vf.c b/drivers/net/ixgbe/base/ixgbe_vf.c
--- a/drivers/net/ixgbe/base/ixgbe_vf.c	2016-07-28 11:48:41.000000000 -0700
+++ b/drivers/net/ixgbe/base/ixgbe_vf.c	2016-10-26 14:16:55.395256473 -0700
@@ -552,6 +552,7 @@
 	s32 ret_val = IXGBE_SUCCESS;
 	u32 links_reg;
 	u32 in_msg = 0;
+	u32 preserve_link_status = 0;
 	UNREFERENCED_1PARAMETER(autoneg_wait_to_complete);
 
 	/* If we were hit with a reset drop the link */
@@ -563,8 +564,10 @@
 
 	/* if link status is down no point in checking to see if pf is up */
 	links_reg = IXGBE_READ_REG(hw, IXGBE_VFLINKS);
-	if (!(links_reg & IXGBE_LINKS_UP))
-		goto out;
+	if (!(links_reg & IXGBE_LINKS_UP)) {
+		preserve_link_status = 1;
+		goto check_mbx;
+	}
 
 	/* for SFP+ modules and DA cables on 82599 it can take up to 500usecs
 	 * before the link status is correct
@@ -576,8 +579,10 @@
 			usec_delay(100);
 			links_reg = IXGBE_READ_REG(hw, IXGBE_VFLINKS);
 
-			if (!(links_reg & IXGBE_LINKS_UP))
-				goto out;
+			if (!(links_reg & IXGBE_LINKS_UP)) {
+				preserve_link_status = 1;
+				goto check_mbx;
+			}
 		}
 	}
 
@@ -596,6 +601,7 @@
 	/* if the read failed it could just be a mailbox collision, best wait
 	 * until we are called again and don't report an error
 	 */
+check_mbx:
 	if (mbx->ops.read(hw, &in_msg, 1, 0))
 		goto out;
 
@@ -615,7 +621,8 @@
 	/* if we passed all the tests above then the link is up and we no
 	 * longer need to check for link
 	 */
-	mac->get_link_status = false;
+	if (!preserve_link_status)
+		mac->get_link_status = false;
 
 out:
 	*link_up = !mac->get_link_status;
diff -Naur a/drivers/net/ixgbe/ixgbe_ethdev.c b/drivers/net/ixgbe/ixgbe_ethdev.c
--- a/drivers/net/ixgbe/ixgbe_ethdev.c	2016-10-26 14:12:22.743724542 -0700
+++ b/drivers/net/ixgbe/ixgbe_ethdev.c	2016-10-26 14:11:37.777781985 -0700
@@ -3256,15 +3256,20 @@
 		link.link_speed = ETH_SPEED_NUM_100M;
 		link.link_duplex = ETH_LINK_FULL_DUPLEX;
 		rte_ixgbe_dev_atomic_write_link_status(dev, &link);
+		return -1;
+#if 0
 		if (link.link_status == old.link_status)
 			return -1;
 		return 0;
+#endif
 	}
 
 	if (link_up == 0) {
 		rte_ixgbe_dev_atomic_write_link_status(dev, &link);
+#if 0
 		if (link.link_status == old.link_status)
 			return -1;
+#endif
 		return 0;
 	}
 	link.link_status = ETH_LINK_UP;
@@ -3290,10 +3295,10 @@
 		break;
 	}
 	rte_ixgbe_dev_atomic_write_link_status(dev, &link);
-
+#if 0
 	if (link.link_status == old.link_status)
 		return -1;
-
+#endif
 	return 0;
 }
 
diff -Naur a/lib/librte_ether/rte_ethdev.h b/lib/librte_ether/rte_ethdev.h
--- a/lib/librte_ether/rte_ethdev.h	2016-10-26 14:12:22.775723078 -0700
+++ b/lib/librte_ether/rte_ethdev.h	2016-10-26 14:11:37.793781252 -0700
@@ -3059,6 +3059,7 @@
 				/**< queue state event (enabled/disabled) */
 	RTE_ETH_EVENT_INTR_RESET,
 			/**< reset interrupt event, sent to VF on PF reset */
+	RTE_ETH_EVENT_VF_MBX_SYNC, /**< VF mailbox out-of-sync with PF. */
 	RTE_ETH_EVENT_MAX       /**< max value of this enum */
 };
 
