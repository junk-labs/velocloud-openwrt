diff -Naur a/.dep_files b/.dep_files
--- a/.dep_files	1969-12-31 16:00:00.000000000 -0800
+++ b/.dep_files	2016-12-01 10:34:07.047390285 -0800
@@ -0,0 +1 @@
+d428b1c6df4bae29e6e9acff9ed0ce03
diff -Naur a/drivers/net/e1000/igb_ethdev.c b/drivers/net/e1000/igb_ethdev.c
--- a/drivers/net/e1000/igb_ethdev.c	2016-12-01 10:41:48.810255789 -0800
+++ b/drivers/net/e1000/igb_ethdev.c	2016-12-01 10:34:08.659316514 -0800
@@ -36,6 +36,9 @@
 #include <errno.h>
 #include <stdint.h>
 #include <stdarg.h>
+#include <fcntl.h>
+#include <sys/types.h>
+#include <sys/stat.h>
 
 #include <rte_common.h>
 #include <rte_interrupts.h>
@@ -704,6 +707,65 @@
 	return E1000_SUCCESS;
 }
 
+#define PCI_CONFIG_COMMAND_OFFSET       4 /* Offset 4 in PCI config space. */
+
+#define PCI_CONFIG_CTRL_IO_SPACE_EN     (1 << 0)
+#define PCI_CONFIG_CTRL_MEM_SPACE_EN    (1 << 1)
+#define PCI_CONFIG_CTRL_BUSMASTER_EN    (1 << 2)
+#define PCI_CONFIG_CTRL_PARITY_ERR      (1 << 6)
+#define PCI_CONFIG_CTRL_SERR            (1 << 8)
+#define PCI_CONFIG_CTRL_INTR_DISABLE    (1 << 10)
+
+static int
+eth_igb_dev_enable(struct rte_pci_device *pci_dev)
+{
+        int fd, rv;
+        void *map_base;
+        u16 pci_config_ctrl;
+        char sysfs_pci_bdf_path[256];
+
+        /* Will not happen, but protect regardless. */
+        if (! pci_dev)
+                return -1;
+
+        sprintf(sysfs_pci_bdf_path, "/sys/bus/pci/devices/0000:%02x:%02x.%01x/config",
+                pci_dev->addr.bus, pci_dev->addr.devid, pci_dev->addr.function);
+
+        fd = open(sysfs_pci_bdf_path, O_RDWR | O_SYNC);
+        if (fd < 0)
+                return -1;
+
+        rv = lseek(fd, PCI_CONFIG_COMMAND_OFFSET, SEEK_SET);
+        if (rv < 0) 
+                goto bail;
+
+        rv = read(fd, &pci_config_ctrl, sizeof(pci_config_ctrl));
+        if (rv < sizeof(pci_config_ctrl) || rv < 0) {
+                rv = -1;
+                goto bail;
+        }
+
+        pci_config_ctrl |= PCI_CONFIG_CTRL_INTR_DISABLE | PCI_CONFIG_CTRL_SERR |
+                PCI_CONFIG_CTRL_PARITY_ERR | PCI_CONFIG_CTRL_BUSMASTER_EN |
+                PCI_CONFIG_CTRL_MEM_SPACE_EN | PCI_CONFIG_CTRL_IO_SPACE_EN;
+       
+	/* Reset file pointer back to position we want. */ 
+	rv = lseek(fd, PCI_CONFIG_COMMAND_OFFSET, SEEK_SET);
+        if (rv < 0) 
+                goto bail;
+
+        rv = write(fd, &pci_config_ctrl, sizeof(pci_config_ctrl));
+        if (rv < sizeof(pci_config_ctrl) || rv < 0) {
+                rv = -1;
+                goto bail;
+        }
+        rv = 0;
+
+bail:
+        close(fd);
+        return rv;
+}
+
 static int
 eth_igb_dev_init(struct rte_eth_dev *eth_dev)
 {
@@ -736,6 +798,11 @@
 	}
 
 	rte_eth_copy_pci_info(eth_dev, pci_dev);
+        
+	if (eth_igb_dev_enable(pci_dev) < 0) {
+		PMD_INIT_LOG(ERR, "device enable failed");
+		return -EIO;
+	}
 
 	hw->hw_addr= (void *)pci_dev->mem_resource[0].addr;
 
diff -Naur a/drivers/net/ixgbe/ixgbe_ethdev.c b/drivers/net/ixgbe/ixgbe_ethdev.c
--- a/drivers/net/ixgbe/ixgbe_ethdev.c	2016-12-01 10:41:48.810255789 -0800
+++ b/drivers/net/ixgbe/ixgbe_ethdev.c	2016-12-01 10:34:08.651316881 -0800
@@ -38,6 +38,9 @@
 #include <string.h>
 #include <unistd.h>
 #include <stdarg.h>
+#include <fcntl.h>
+#include <sys/types.h>
+#include <sys/stat.h>
 #include <inttypes.h>
 #include <netinet/in.h>
 #include <rte_byteorder.h>
@@ -1019,6 +1022,66 @@
 	ixgbe_release_swfw_semaphore(hw, mask);
 }
 
+#define PCI_CONFIG_COMMAND_OFFSET       4 /* Offset 4 in PCI config space. */
+
+#define PCI_CONFIG_CTRL_IO_SPACE_EN     (1 << 0)
+#define PCI_CONFIG_CTRL_MEM_SPACE_EN    (1 << 1)
+#define PCI_CONFIG_CTRL_BUSMASTER_EN    (1 << 2)
+#define PCI_CONFIG_CTRL_PARITY_ERR      (1 << 6)
+#define PCI_CONFIG_CTRL_SERR            (1 << 8)
+#define PCI_CONFIG_CTRL_INTR_DISABLE    (1 << 10)
+
+static int
+eth_ixgbe_dev_enable(struct rte_pci_device *pci_dev)
+{
+        int fd, rv;
+        void *map_base;
+        u16 pci_config_ctrl;
+        char sysfs_pci_bdf_path[256];
+
+        /* Will not happen, but protect regardless. */
+        if (! pci_dev)
+                return -1;
+
+        sprintf(sysfs_pci_bdf_path, "/sys/bus/pci/devices/0000:%02x:%02x.%01x/config",
+                pci_dev->addr.bus, pci_dev->addr.devid, pci_dev->addr.function);
+
+        fd = open(sysfs_pci_bdf_path, O_RDWR | O_SYNC);
+        if (fd < 0)
+                return -1;
+
+        rv = lseek(fd, PCI_CONFIG_COMMAND_OFFSET, SEEK_SET);
+        if (rv < 0) 
+                goto bail;
+
+        rv = read(fd, &pci_config_ctrl, sizeof(pci_config_ctrl));
+        if (rv < sizeof(pci_config_ctrl) || rv < 0) {
+                rv = -1;
+                goto bail;
+        }
+
+        pci_config_ctrl |= PCI_CONFIG_CTRL_INTR_DISABLE | PCI_CONFIG_CTRL_SERR |
+                PCI_CONFIG_CTRL_PARITY_ERR | PCI_CONFIG_CTRL_BUSMASTER_EN |
+                PCI_CONFIG_CTRL_MEM_SPACE_EN | PCI_CONFIG_CTRL_IO_SPACE_EN;
+       
+	/* Reset file pointer back to position we want. */ 
+	rv = lseek(fd, PCI_CONFIG_COMMAND_OFFSET, SEEK_SET);
+        if (rv < 0) 
+                goto bail;
+
+        rv = write(fd, &pci_config_ctrl, sizeof(pci_config_ctrl));
+        if (rv < sizeof(pci_config_ctrl) || rv < 0) {
+                rv = -1;
+                goto bail;
+        }
+        rv = 0;
+
+bail:
+        close(fd);
+        return rv;
+}
+
+
 /*
  * This function is based on code in ixgbe_attach() in base/ixgbe.c.
  * It returns 0 on success.
@@ -1074,6 +1137,11 @@
 
 	rte_eth_copy_pci_info(eth_dev, pci_dev);
 
+        if (eth_ixgbe_dev_enable(pci_dev) < 0) {
+		PMD_INIT_LOG(ERR, "device enable failed");
+		return -EIO;
+	}
+
 	/* Vendor and Device ID need to be set before init of shared code */
 	hw->device_id = pci_dev->id.device_id;
 	hw->vendor_id = pci_dev->id.vendor_id;
diff -Naur a/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c b/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c
--- a/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c	2016-12-01 10:41:48.218284714 -0800
+++ b/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c	2016-12-01 10:34:06.535413716 -0800
@@ -3052,7 +3052,9 @@
 	                             pci_select_bars(pdev, IORESOURCE_MEM));
 err_pci_reg:
 err_dma:
+#if 0
 	pci_disable_device(pdev);
+#endif
 	return err;
 }
 #ifdef HAVE_I2C_SUPPORT
diff -Naur a/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/ixgbe_main.c b/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/ixgbe_main.c
--- a/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/ixgbe_main.c	2016-12-01 10:41:48.222284275 -0800
+++ b/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/ixgbe_main.c	2016-12-01 10:34:06.551412984 -0800
@@ -2923,7 +2923,9 @@
 	//			     pci_select_bars(pdev, IORESOURCE_MEM));
 //err_pci_reg:
 //err_dma:
+#if 0
 	pci_disable_device(pdev);
+#endif
 	return err;
 }
 
