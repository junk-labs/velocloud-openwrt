  * SECURITY UPDATE: buffer overflow (read past end of buffer) in
    internal_fnmatch
    - patches/any/CVE-2015-8984.diff: Remove extra increment when
      skipping over collating symbol inside a bracket expression.
    - CVE-2015-8984

commit fc843f6e48737d3d6690c5cf355d9719274efee1
Author: Andreas Schwab <schwab@suse.de>
Date:   Thu Feb 26 14:55:24 2015 +0100
Description: Fix read past end of pattern in fnmatch (bug 18032)

    Fix read past end of pattern in fnmatch (bug 18032)
    
    (cherry picked from commit 4a28f4d55a6cc33474c0792fe93b5942d81bf185)
    
    Conflicts:
    	ChangeLog
    	NEWS

	[BZ #18032]
	* posix/fnmatch_loop.c (FCT): Remove extra increment when skipping
	over collating symbol inside a bracket expression.  Minor cleanup.

[Ubuntu note: removed changes to NEWS and ChangeLog to avoid patch
 conflicts. --sbeattie]

CVE-2015-8984

diff --git a/libc/posix/fnmatch_loop.c b/libc/posix/fnmatch_loop.c
index f79d051..f11d0f1 100644
--- a/libc/posix/fnmatch_loop.c
+++ b/libc/posix/fnmatch_loop.c
@@ -951,14 +951,13 @@ FCT (pattern, string, string_end, no_leading_period, flags, ends, alloca_used)
 		  }
 		else if (c == L('[') && *p == L('.'))
 		  {
-		    ++p;
 		    while (1)
 		      {
 			c = *++p;
-			if (c == '\0')
+			if (c == L('\0'))
 			  return FNM_NOMATCH;
 
-			if (*p == L('.') && p[1] == L(']'))
+			if (c == L('.') && p[1] == L(']'))
 			  break;
 		      }
 		    p += 2;
