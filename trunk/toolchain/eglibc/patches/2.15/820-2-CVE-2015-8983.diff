  * SECURITY UPDATE: _IO_wstr_overflow integer overflow
    - patches/any/CVE-2015-8983.diff: Add checks for integer overflow
    - CVE-2015-8983

commit 012adb33827608d3b78e3832a1948b468b549946
Author: Paul Pluzhnikov <ppluzhnikov@google.com>
Date:   Sun Feb 22 12:01:47 2015 -0800
Description: Fix BZ #17269 -- _IO_wstr_overflow integer overflow

    Fix BZ #17269 -- _IO_wstr_overflow integer overflow
    
    (cherry picked from commit bdf1ff052a8e23d637f2c838fa5642d78fcedc33)
    
    Conflicts:
    	ChangeLog
    	NEWS

	[BZ #17269]
	* libio/wstrops.c (_IO_wstr_overflow): Guard against integer overflow
	(enlarge_userbuf): Likewise.

[Ubuntu note: removed changes to NEWS and ChangeLog to avoid
 patch conflicts. Also, modified patch to remove references
 to __glibc_unlikely, which this version of glibc does not
 support. --sbeattie]

CVE-2015-8983

diff --git a/libc/libio/wstrops.c b/libc/libio/wstrops.c
index 399a377..9218d4a 100644
--- a/libc/libio/wstrops.c
+++ b/libc/libio/wstrops.c
@@ -95,8 +95,11 @@ _IO_wstr_overflow (fp, c)
 	  wchar_t *old_buf = fp->_wide_data->_IO_buf_base;
 	  size_t old_wblen = _IO_wblen (fp);
 	  _IO_size_t new_size = 2 * old_wblen + 100;
-	  if (new_size < old_wblen)
+
+	  if ((new_size < old_wblen)
+	      || (new_size > SIZE_MAX / sizeof (wchar_t)))
 	    return EOF;
+
 	  new_buf
 	    = (wchar_t *) (*((_IO_strfile *) fp)->_s._allocate_buffer) (new_size
 									* sizeof (wchar_t));
@@ -186,6 +189,9 @@ enlarge_userbuf (_IO_FILE *fp, _IO_off64_t offset, int reading)
     return 1;
 
   _IO_size_t newsize = offset + 100;
+  if (newsize > SIZE_MAX / sizeof (wchar_t))
+    return 1;
+
   wchar_t *oldbuf = wd->_IO_buf_base;
   wchar_t *newbuf
     = (wchar_t *) (*((_IO_strfile *) fp)->_s._allocate_buffer) (newsize
