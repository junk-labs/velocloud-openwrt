--- a/drivers/i2c/i2c-core.c	2015-05-17 09:54:01.000000000 -0700
+++ b/drivers/i2c/i2c-core.c	2015-08-24 08:56:40.126462481 -0700
@@ -1971,6 +1971,10 @@
 	if (!(adapter->class & driver->class))
 		return 0;
 
+	/* limit detect to bound adaptors */
+	if(driver->bound && !(driver->bound & (1 << adap_id)))
+		return 0;
+
 	/* Set up a temporary client to help detect callback */
 	temp_client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);
 	if (!temp_client)
--- a/include/linux/i2c.h	2015-05-17 09:54:01.000000000 -0700
+++ b/include/linux/i2c.h	2015-08-20 14:40:19.664040059 -0700
@@ -124,6 +124,7 @@
 /**
  * struct i2c_driver - represent an I2C device driver
  * @class: What kind of i2c device we instantiate (for detect)
+ * @bound: bitmask to bind to specific adapters
  * @attach_adapter: Callback for bus addition (deprecated)
  * @probe: Callback for device binding
  * @remove: Callback for device unbinding
@@ -160,6 +161,7 @@
  */
 struct i2c_driver {
 	unsigned int class;
+	unsigned int bound;
 
 	/* Notifies the driver that a new bus has appeared. You should avoid
 	 * using this, it will be removed in a near future.
